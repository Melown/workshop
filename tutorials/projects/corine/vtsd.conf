# This configuration file configures bare usable minimum. Some options are
# commented out to show default values.
#
# There are some options that can be set only from the command line. See init
# script (i.e. /etc/init.d/vts-backend-vtsd) for details.
#
# Full configuration information can be obtained by running vtsd with either
# --help (help for only command line options) or --help-all (help for both
# command line and config file options).
#
# All configuration file options can be set from command line. There can be even
# more than one config file. Only the first occurence of configuration option is
# used, i.e. options specified on the command line overrides any other occurence
# in the config file. Likewise, configuration option occurence in a
# configuration file overrides any other occurence in subsequent configuration
# files.

# logging setup
[log]
# log mask
mask = VERBOSE

# path to file to log to
file = ./vtsd.log

# Daemon settings. Allows us to run under different user than the one that
# starter program. Original user must have privileges to switch process persona
# (i.e. change to different user/group) which boils down to root (system
# administrator) in almost all practical situations.
# Comment out if running manually.
#[service]
# name of system user to run under
#user = jachym
# name of system group to run under
#group = jachym


# HTTP server configuration
[http]
## TCP endpoint where to listen at. Format: IP:port, :port, port
# listen = 3060

## Number of HTTP processing threads, defaults to hardware concurrency, i.e. the
## number of available processor
# threadCount = <number of CPUs>


## Per-location configuration.  Location handling is similar to how nginx
## matches URL path against configured locations
## (http://nginx.org/en/docs/http/ngx_http_core_module.html#location)
##
##
## Regex-based locations take precedence before prefix-based ones. Prefix
## locations are sorted by prefix length starting from the longest one. Regex
## locations are kept in the configuration order.
##
## Filesystem path is resource to handle is composed as:
## Prefix-based location:
##     --root = root:
##         ${root}/${URL-path}
##
##     --alias = alias:
##         ${alias}/${rest of URL path after location}
##
## Regex-based location:
##     --root = root: (same as for a prefix location)
##         ${root}/${URL-path}
##
##     --alias = alias:
##         Expands \N references in alias with matched groups from location regex.
##
## File caching information can be configured for different file classes. The
## HTTP Cache-Control header is generated as follows. The file age is specified
## in second.
#     value >= 0 -> Cache-Control: max-age=value
#     value < 0  -> Cache-Control: no-cache
#
## Generic location documentation.
#[location<URL-path-pattern>]
## How to match requet URL path against URL-path pattern:
##     prefix: treat location as a path prefix
##     regex: treat location as a perl regular expression
# match = prefix
#
## Enables handling of VTS datasets inside location space. (boolean switch)
# dataset = true
#
## Enables built-in VTS browser. (boolean switch)
# browser = false
#
## Enables directory listing. (boolean switch)
# listing = false
#
## Location filesystem root path configuration (in conflict with alias)
# root = ?
#
## Location alias on the filesystem (in conflict with root)
# alias = ?
#
## URL to the built-in VTS browser. Defaults to VTS browser provided by Melown's
## CDN.
# vts.builtinBrowserUrl = compiled-in-URL
#
## Class for variousconfiguration files, freelayer.json and mapConfig.json.
## Defaults to one minute.
# max-age.config arg = 60
#
## Class for support files, like internal VTS browser index.html for surfaces
## and surface debugger (debugger.html). Defaults to one hour.
# max-age.support = 3600
#
## Class for files provided by registry (geoid grids so far). Defaults to one
## hour.
# max-age.registry arg = 3600
#
## Class for all data files (images, meshes, ...). Defaults to one week.
# max-age.data = 604800

# Default handling for every request.
[location</>]
# handle files under this directory.
root = /home/jachym/src/melown/projects/openlanduse/

## Treat everything as a dataset
# dataset = true

# Enable built-in VTS browser and built-in surface debugger.
browser = true

# Enable directory-like server browsing.
listing = true

# Cache all data files for 1 day; all other file classes use defaults.
max-age.data = 86400


# Disable dataset handling for stylesheets
[location</stylesheet>]
# handle files under this directory.
root = /home/jachym/src/melown/projects/openlanduse/styles/
## Just plain files
dataset = false
# Enable directory-like server browsing.
listing = true
# Cache stylesheets only for one hour
max-age.data = 3600
